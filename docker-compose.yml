services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  cron:
    build: .
    container_name: amopromo_cron
    depends_on:
      - redis
      - web
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - DJANGO_SETTINGS_MODULE=amopromo.settings
    env_file:
      - .env
    command: >
      bash -c "
        echo 'Starting cron container...' &&
        service cron start &&
        cd /app &&
        python manage.py crontab add &&
        echo 'Cron jobs added. Tailing cron log...' &&
        tail -f /var/log/cron.log
      "
    restart: unless-stopped

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: amopromo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
    - "5432:5432"
    networks:
    - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge